My Name: Archi Mukeshbhai Kakadiya
Email: akakadiya1@myseneca.ca
Student ID: 117470229
Date: 10/04/2023

Reflection:

- I completed this workshop alone, with the assistance of my professor's code, and by reading the course materials.

- I wrote program of creating POS System by declaring arrays and cStrings, designing structures and accessing text files to read information. I declared functions prototype in PosApp.h like cost, getItems, start, inventory, addItem, removeItem, stockItem, POS, listItems, loadItems and saveItems. I wrote all these functions in PosApp.c file and Used it in PosUI.c file in runPos Function. Then Call runPos in main.c. One thing that I added new is posdata.csv file which is datafile and opened it in PosApp.c by using fopen and after reading all items information from it, closed it by using fclose in same source code file.

- I learned how to design and create structures in C Program in Multiple Files and what is the difference between creating it in One File and Multiple Files. I learned to use and pass Array of structures from one function to another by using pointer concept which is very exciting and new for me. I accessed text files to read information so I learned opening and closing of file. I learned to format and display structure information on screen.


- If I am describing the function of PosApp.c in descriptive way then it should be written as below:

* 1. start(const char* action): This function takes in a string action and prints a message indicating that the specified action is starting.

* 2. double cost(const struct item* item): This function takes in a pointer to a struct item and calculates the cost of the item by multiplying the item's price by the tax rate (if taxed is true) plus one.

* 3. int getItems(struct item* item, FILE* fptr): This function reads in a comma-separated line from a file pointed to by fptr and assigns the values to the fields of the struct item pointed to by item. It returns 1 if it successfully reads in a line and 0 otherwise.

* 4. int loadItems(const char filename[]): This function loads items from a file with the specified filename. It first prints a message indicating that it is starting, then opens the file for reading. It then reads in lines from the file using the getItems function and assigns the values to the items array. It continues reading lines until either the end of the file is reached, the maximum number of items is loaded (MAX_NO_ITEMS), or an error occurs. It then sets the noOfItems variable to the number of items loaded and prints a message indicating that it is done. Finally, it closes the file and returns the number of items loaded.

* 5. void listItems(void): This function prints a formatted list of items to the console. It first prints a header row, then loops through each item in the items array, formatting and printing a row for each item. It calculates the total cost of each item (including tax) using the cost function and the item's quantity, and prints it in the last column.

* 6. void inventory(void): This function prints a summary of the inventory to the console. It first prints a message indicating that it is starting, then calls the listItems function to print the list of items. It then loops through each item and calculates the total asset value by multiplying the total cost of the item by the quantity and adding it to a running total. Finally, it prints the total asset value.

* 7. void saveItems(const char filename[]): This function prints Saving Items message.

* 8. void addItem(void): This function prints adding Items message.

* 9. void removeItem(void): This function prints removing items message.

* 10. void stockItem(void): This function prints stocking items message.

- I face one issue to complete this workshop which is I tried to set empty string by setting sku NULL in PosApp.c file but I didn't able to do it as It caused problems in my all output. After that, I gave up on it and wrote code by different ways and succeded in it. By doing all these things, I learned so many concepts. For that, A big Thanks to you Fardad.