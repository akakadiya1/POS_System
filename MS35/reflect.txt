My Name: Archi Mukeshbhai Kakadiya
Email: akakadiya1@myseneca.ca
Student ID: 117470229
Date: 18/04/2023

Reflection:

- I completed this workshop alone, with the assistance of my professor's code, and by reading the course materials.

- I wrote program of creating POS System by declaring arrays and cStrings, designing structures and accessing text files to read information. I declared functions prototype in PosApp.h like POS, search, display, billDisplay, cost, getItems, start, inventory, addItem, removeItem, stockItem, listItems, loadItems and saveItems. I wrote all these functions in PosApp.c file and Used it in main.c file by calling it.

- I wrote this program by using more complicated method [Bonus Mark] which is Using an array of Item structure pointers to keep the addresses of the sold items for bill printing (uses less memory).

- I learned how to design and create structures in C Program in Multiple Files and what is the difference between creating it in One File and Multiple Files. I learned to use and pass Array of structures from one function to another by using pointer concept which is very exciting and new for me. I accessed text files to read information so I learned opening and closing of file. I learned to format and display structure information on screen.


- If I am describing the POS function's process in descriptive way then it should be written as below:

* 1. The function starts by initializing an array of pointers to struct Item named "bill" with a NULL value. It also initializes variables such as "noOfItems" as an integer, "done" as a flag, "total" as a double, "fIndex" as an integer for the index of the item found in the search function, and "i" as an integer for loop iteration. Then the function calls another function named "start" with the argument "Point Of Sale".

* 2. After that, the function starts a while loop that keeps iterating as long as the "noOfItems" variable is less than the "MAX_BILL_ITEMS" constant and "done" is not true. Inside the while loop, the function calls another function named "search" which returns an integer value named "fIndex".

* 3. If the value of "fIndex" is greater than 0 and the quantity of the item with index "fIndex" is greater than 0, then the quantity of that item is decremented by 1 and the function "display" is called with the address of the item with index "fIndex". The address of the item with index "fIndex" is then stored in the "bill" array at index "noOfItems" and "noOfItems" is incremented by 1. The code is bill[noOfItems++] = &items[fIndex]; because In this method, an array of pointers to Item structures is used to store the addresses of the sold items. This means that each element of the array contains a memory address pointing to the corresponding sold item. This method is more memory-efficient, as it only stores the memory addresses of the sold items rather than copying the entire item structure, While If I wrote it like bill[noOfItems++] = items[fIndex];, a separate copy of the sold items is made and stored in the array. This means that the entire item structure is stored in memory for each sold item, leading to higher memory usage than the previous method.

* 4. If the value of "fIndex" is greater than or equal to 0 but the quantity of the item with index "fIndex" is 0, then a message "Item sold out!" is printed. If the value of "fIndex" is equal to -1, then a message "SKU not found!" is printed. If the value of "fIndex" is less than -1, then the variable "done" is set to 1 to terminate the while loop.

* 5. After the while loop, if the value of "noOfItems" is greater than 0, then a bill is printed on the console. A for loop is used to iterate through the "bill" array from 0 to "noOfItems" and the function "billDisplay" is called with the pointer to the item at each index. The return value of "billDisplay" is added to the "total" variable. Finally, the "total" variable is printed along with the bill details.

- I didn't face any issue to complete this workshop as I researched about every concept of value passing by using pointer structure means passing by addresses and passing by value already as well as I understood the concept of these two methods. After that, I wrote code by applying professor's method and succeded in it. By doing all these things, I learned so many concepts. For that, A big Thanks to you Fardad.